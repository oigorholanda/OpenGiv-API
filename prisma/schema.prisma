generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  description String?
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  items       items[]
}

model donations {
  id          Int      @id @default(autoincrement())
  item_id     Int
  receiver_id Int
  status      String
  created_at  DateTime @default(now()) @db.Timestamp(6)
  items       items    @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users       users    @relation(fields: [receiver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model items {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(255)
  description String
  image_url   String      @db.VarChar(255)
  category_id Int
  user_id     Int
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  donations   donations[]
  categories  categories  @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users       users       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model messages {
  name    String?
  message String?

  @@ignore
}

model users {
  id         Int         @id @default(autoincrement())
  name       String      @db.VarChar(255)
  email      String      @unique @db.VarChar(255)
  password   String      @db.VarChar(255)
  phone      String      @db.VarChar(20)
  balance    BigInt?     @default(0)
  created_at DateTime    @default(now()) @db.Timestamp(6)
  updated_at DateTime    @default(now()) @db.Timestamp(6)
  donations  donations[]
  items      items[]
}
